{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giris\\\\OneDrive\\\\Desktop\\\\to do list\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch todos from API\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('/api/todos');\n        if (!response.ok) {\n          throw new Error('Failed to fetch todos');\n        }\n        const data = await response.json();\n        setTodos(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchTodos();\n  }, []);\n\n  // Add a new todo\n  const addTodo = async text => {\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add todo');\n      }\n      const newTodo = await response.json();\n      setTodos([...todos, newTodo]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Toggle todo completion status\n  const toggleTodo = async id => {\n    try {\n      const todo = todos.find(t => t.id === id);\n      const response = await fetch(`/api/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: !todo.completed\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update todo');\n      }\n      const updatedTodo = await response.json();\n      setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Delete a todo\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`/api/todos/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete todo');\n      }\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        toggleTodo: toggleTodo,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8cPL8yhAVVqFRj33HpgY53c1pGM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","loading","setLoading","error","setError","fetchTodos","response","fetch","ok","Error","data","json","err","message","addTodo","text","method","headers","body","JSON","stringify","newTodo","toggleTodo","id","todo","find","t","completed","updatedTodo","map","deleteTodo","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/giris/OneDrive/Desktop/to do list/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch todos from API\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('/api/todos');\n        if (!response.ok) {\n          throw new Error('Failed to fetch todos');\n        }\n        const data = await response.json();\n        setTodos(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  // Add a new todo\n  const addTodo = async (text) => {\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add todo');\n      }\n\n      const newTodo = await response.json();\n      setTodos([...todos, newTodo]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Toggle todo completion status\n  const toggleTodo = async (id) => {\n    try {\n      const todo = todos.find(t => t.id === id);\n      const response = await fetch(`/api/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ completed: !todo.completed }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update todo');\n      }\n\n      const updatedTodo = await response.json();\n      setTodos(todos.map(todo => \n        todo.id === id ? updatedTodo : todo\n      ));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Delete a todo\n  const deleteTodo = async (id) => {\n    try {\n      const response = await fetch(`/api/todos/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete todo');\n      }\n\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Todo List</h1>\n      </header>\n      <div className=\"container\">\n        <h1 className=\"app-title\">Tasks</h1>\n        \n        {error && <div className=\"error\">{error}</div>}\n        \n        <TodoForm addTodo={addTodo} />\n        \n        {loading ? (\n          <div className=\"loading\">Loading tasks...</div>\n        ) : (\n          <TodoList \n            todos={todos} \n            toggleTodo={toggleTodo} \n            deleteTodo={deleteTodo} \n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}